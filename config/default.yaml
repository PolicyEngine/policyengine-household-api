# Default configuration for PolicyEngine Household API
# This configuration provides defaults suitable for local development

---
# Application settings
app:
  name: policyengine-household-api
  environment: local
  # debug: true  # Will be enabled when migrated from FLASK_DEBUG env var

# User analytics configuration
# Controls whether user analytics are collected and stored
analytics:
  # Whether analytics collection is enabled (opt-in)
  enabled: false  # Set to true to enable analytics collection
  
  # Database connection for analytics (only used if enabled=true)
  # These will be overridden by environment variables in production
  database:
    # Connection name for Google Cloud SQL
    connection_name: ""  # Override with USER_ANALYTICS_DB_CONNECTION_NAME
    # Database username
    username: ""  # Override with USER_ANALYTICS_DB_USERNAME  
    # Database password
    password: ""  # Override with USER_ANALYTICS_DB_PASSWORD

# Database configuration
# Note: Currently only analytics database is used
# Future application databases would be configured here

# Storage configuration  
storage:
  # provider: local  # Future: local filesystem for dev, gcs for production
  # Future migration from:
  # - Google Cloud Storage implicit configuration

# Authentication configuration
# Controls whether Auth0 authentication is enforced on API endpoints
auth:
  # Whether authentication is enabled (opt-in)
  enabled: false  # Set to true to enable Auth0 authentication
  
  # Auth0 configuration (only used if enabled=true)
  # These will be overridden by environment variables in production
  auth0:
    # Auth0 domain (without https:// or trailing slash)
    address: ""  # Override with AUTH0_ADDRESS_NO_DOMAIN
    # Auth0 API audience
    audience: ""  # Override with AUTH0_AUDIENCE_NO_DOMAIN

# AI services configuration
ai:
  # enabled: false  # Future: disabled for local development
  # Future migration from:
  # - ANTHROPIC_API_KEY

# Server configuration
server:
  # port: 8080
  # workers: 2
  # timeout: 300

# Logging configuration
logging:
  # level: INFO
  # format: json